// snmp_console2.cpp : Defines the entry point for the console application.
//

#include "module.hpp"

using namespace std;

 unsigned char buf[]{
	0x30, 0x3c, 0x02, 0x01, 0x01, 0x04, 0x06, 0x70, 
	0x75, 0x62, 0x6c, 0x69, 0x63, 0xa2, 0x2f, 0x02, 
	0x04, 0x67, 0x91, 0x77, 0xf5, 0x02, 0x01, 0x00, 
	0x02, 0x01, 0x00, 0x30, 0x21, 0x30, 0x1f, 0x06, 
	0x08, 0x2b, 0x06, 0x01, 0x02, 0x01, 0x01, 0x04, 
	0x00, 0x04, 0x13, 0x4d, 0x65, 0x20, 0x3c, 0x6d, 
	0x65, 0x40, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 
	0x65, 0x2e, 0x6f, 0x72, 0x67, 0x3e
};


int main()
{
	for (size_t i = 0; i < 1; i++)
	{
		shared_ptr<BER> ber = std::shared_ptr<BER>(new BER(&buf[0],0));
		shared_ptr<SNMP_PDU> pdu = shared_ptr<SNMP_PDU>(SNMP_PDU::ParseBERtoSNMP_PDU(ber));
		
		vector<unsigned char> vl;
		pdu->SNMP_PDUtoBER(&vl);
		shared_ptr<BER> br = std::shared_ptr<BER>(new BER(vl, 0));
	}
	
	cout << endl;
	cout << "ok";
	
	getchar();
    return 0;
}

